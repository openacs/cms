# try to find/serve the requested content

set the_url [ad_conn path_info]
set the_root [ns_info pageroot]

# get roots
set content_root [cm::modules::sitemap::getRootFolderID [ad_conn subsite_id]]
set template_root [cm::modules::templates::getRootFolderID [ad_conn subsite_id]]

# get item id from url
set item_id [content::item::get_id -item_path $the_url -root_folder_id $content_root]

# if there's no id, must not be a cr_item
if { [template::util::is_nil item_id] } {
    ns_log notice "CMS index.vuh: bailing out on $the_url; not a CR item!"
    ns_returnnotfound
    ad_script_abort
}

if { [string match [content::item::get_content_type -item_id $item_id] content_folder] } {
    # it's a folder, so set item_id to nil
    set folder_id $item_id
    set item_id ""

    # look for index page
    set item_id [content::folder::get_index_page -folder_id $folder_id]
}

# no index page for folder
if { [template::util::is_nil item_id] } {
    ns_log notice "CMS index.vuh: bailing out on $the_url; no index page for folder!"
    ns_returnnotfound
    ad_script_abort
}

# check perms (want to allow for unregistered users to view public content)
permission::require_permission -object_id $item_id \
    -party_id [ad_conn user_id] -privilege read

# grab mime info
set revision_id [content::item::get_best_revision -item_id $item_id]
item::get_mime_info $revision_id

switch $mime_info(mime_type) {

    text/html - text/plain - "text/plain; format=flowed" - text/enriched {
	# parameter to determine whether or not to call content::init or serve from db?
	set template_id [content::item::get_template -item_id $item_id -use_context public]
	# if there's no template, just write content and hope for the best
	if { [template::util::is_nil template_id] } {
	    cr_write_content -revision_id $revision_id
	}
	set path [content::template::get_path -template_id $template_id -root_folder_id $template_root]

	# put item_id into form so template can get it out ...
	# and then redirect to template
	rp_form_put item_id $item_id
	rp_internal_redirect $path
    }

    default {
	cr_write_content -revision_id $revision_id
    }

}

